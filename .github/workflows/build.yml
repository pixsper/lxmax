name: Build and Package

on:
  push:
    branches: [ main ]
    tags:
    - 'v*'
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Build ${{ matrix.os }} 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
        
    - name: Install Conan
      uses: turtlebrowser/get-conan@v1.2
      with:
        version: 1.60.0

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Upload Built Package
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-package
        path: |
          docs/*.xml
          extras/**/*.maxpat
          help/*.maxhelp
          misc/**/*.*
          extensions/*.mxe64
          extensions/*.mxo
          externals/*.mxe64
          externals/*.mxo
          support/*.dll
          support/*.dylib
          icon.png
          LICENSE.md
          package-info.json
          README.md
              
  package:
    name: Package
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Get Short SHA
        uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 7
    
      - name: Download All Packages
        uses: actions/download-artifact@v3
          
      - name: Delete Package Artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            windows-latest package
            macOS-latest package
      
      - name: Copy To Staging Directory
        run: |
          sudo mkdir -p package/lxmax
          sudo rsync -avhu "windows-latest-package/" package/lxmax
          sudo rsync -avhu "macOS-latest-package/" package/lxmax
          
      - name: Upload Combined Packages
        uses: actions/upload-artifact@v3
        with:
          name: lxmax_${{github.ref_name}}_${{steps.short-sha.outputs.sha}}
          path: package

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Compress Release
        if: startsWith(github.ref, 'refs/tags/v')
        run: sudo zip -qq -r lxmax_${{github.ref_name}}.zip lxmax
        working-directory: package

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          prerelease: ${{ contains(github.ref, '-') }}
          files: package/lxmax_${{github.ref_name}}.zip